// !!! FULL HLBC OPCODE LIST, EVERY ENTRY HAS LABEL PROPERTY !!!
export const OPCODE_OPTIONS = [
  { key: "Mov", label: "Mov", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "Int", label: "Int", params: [ {key:"dst", type:"reg"}, {key:"ptr", type:"int"} ] },
  { key: "Float", label: "Float", params: [ {key:"dst", type:"reg"}, {key:"ptr", type:"float"} ] },
  { key: "Bool", label: "Bool", params: [ {key:"dst", type:"reg"}, {key:"value", type:"bool"} ] },
  { key: "Bytes", label: "Bytes", params: [ {key:"dst", type:"reg"}, {key:"ptr", type:"bytes"} ] },
  { key: "String", label: "String", params: [ {key:"dst", type:"reg"}, {key:"ptr", type:"string"} ] },
  { key: "Null", label: "Null", params: [ {key:"dst", type:"reg"} ] },
  { key: "Add", label: "Add", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Sub", label: "Sub", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Mul", label: "Mul", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "SDiv", label: "SDiv", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "UDiv", label: "UDiv", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "SMod", label: "SMod", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "UMod", label: "UMod", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Shl", label: "Shl", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "SShr", label: "SShr", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "UShr", label: "UShr", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "And", label: "And", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Or", label: "Or", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Xor", label: "Xor", params: [ {key:"dst", type:"reg"}, {key:"a", type:"reg"}, {key:"b", type:"reg"} ] },
  { key: "Neg", label: "Neg", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "Not", label: "Not", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "Incr", label: "Incr", params: [ {key:"dst", type:"reg"} ] },
  { key: "Decr", label: "Decr", params: [ {key:"dst", type:"reg"} ] },

  { key: "Call0", label: "Call0", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"} ] },
  { key: "Call1", label: "Call1", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"arg0", type:"reg"} ] },
  { key: "Call2", label: "Call2", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"arg0", type:"reg"}, {key:"arg1", type:"reg"} ] },
  { key: "Call3", label: "Call3", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"arg0", type:"reg"}, {key:"arg1", type:"reg"}, {key:"arg2", type:"reg"} ] },
  { key: "Call4", label: "Call4", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"arg0", type:"reg"}, {key:"arg1", type:"reg"}, {key:"arg2", type:"reg"}, {key:"arg3", type:"reg"} ] },
  { key: "CallN", label: "CallN", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"args", type:"reg"} ] },
  { key: "CallMethod", label: "CallMethod", params: [ {key:"dst", type:"reg"}, {key:"field", type:"field"}, {key:"args", type:"reg"} ] },
  { key: "CallThis", label: "CallThis", params: [ {key:"dst", type:"reg"}, {key:"field", type:"field"}, {key:"args", type:"reg"} ] },
  { key: "CallClosure", label: "CallClosure", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"reg"}, {key:"args", type:"reg"} ] },
  { key: "StaticClosure", label: "StaticClosure", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"} ] },
  { key: "InstanceClosure", label: "InstanceClosure", params: [ {key:"dst", type:"reg"}, {key:"fun", type:"function"}, {key:"obj", type:"reg"} ] },
  { key: "VirtualClosure", label: "VirtualClosure", params: [ {key:"dst", type:"reg"}, {key:"obj", type:"reg"}, {key:"field", type:"reg"} ] },

  { key: "GetGlobal", label: "GetGlobal", params: [ {key:"dst", type:"reg"}, {key:"global", type:"global"} ] },
  { key: "SetGlobal", label: "SetGlobal", params: [ {key:"global", type:"global"}, {key:"src", type:"reg"} ] },
  { key: "Field", label: "Field", params: [ {key:"dst", type:"reg"}, {key:"obj", type:"reg"}, {key:"field", type:"field"} ] },
  { key: "SetField", label: "SetField", params: [ {key:"obj", type:"reg"}, {key:"field", type:"field"}, {key:"src", type:"reg"} ] },
  { key: "GetThis", label: "GetThis", params: [ {key:"dst", type:"reg"}, {key:"field", type:"field"} ] },
  { key: "SetThis", label: "SetThis", params: [ {key:"field", type:"field"}, {key:"src", type:"reg"} ] },
  { key: "DynGet", label: "DynGet", params: [ {key:"dst", type:"reg"}, {key:"obj", type:"reg"}, {key:"field", type:"string"} ] },
  { key: "DynSet", label: "DynSet", params: [ {key:"obj", type:"reg"}, {key:"field", type:"string"}, {key:"src", type:"reg"} ] },

  { key: "JTrue", label: "JTrue", params: [ {key:"cond", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JFalse", label: "JFalse", params: [ {key:"cond", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JNull", label: "JNull", params: [ {key:"reg", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JNotNull", label: "JNotNull", params: [ {key:"reg", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JSLt", label: "JSLt", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JSGte", label: "JSGte", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JSGt", label: "JSGt", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JSLte", label: "JSLte", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JULt", label: "JULt", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JUGte", label: "JUGte", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JNotLt", label: "JNotLt", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JNotGte", label: "JNotGte", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JEq", label: "JEq", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JNotEq", label: "JNotEq", params: [ {key:"a", type:"reg"}, {key:"b", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "JAlways", label: "JAlways", params: [ {key:"offset", type:"offset"} ] },

  { key: "ToDyn", label: "ToDyn", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "ToSFloat", label: "ToSFloat", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "ToUFloat", label: "ToUFloat", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "ToInt", label: "ToInt", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "SafeCast", label: "SafeCast", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "UnsafeCast", label: "UnsafeCast", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "ToVirtual", label: "ToVirtual", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },

  { key: "Label", label: "Label", params: [] },
  { key: "Ret", label: "Ret", params: [ {key:"ret", type:"reg"} ] },
  { key: "Throw", label: "Throw", params: [ {key:"exc", type:"reg"} ] },
  { key: "Rethrow", label: "Rethrow", params: [ {key:"exc", type:"reg"} ] },
  { key: "Switch", label: "Switch", params: [ {key:"reg", type:"reg"}, {key:"offsets", type:"offset"}, {key:"end", type:"offset"} ] },
  { key: "NullCheck", label: "NullCheck", params: [ {key:"reg", type:"reg"} ] },
  { key: "Trap", label: "Trap", params: [ {key:"exc", type:"reg"}, {key:"offset", type:"offset"} ] },
  { key: "EndTrap", label: "EndTrap", params: [ {key:"exc", type:"reg"} ] },

  { key: "GetI8", label: "GetI8", params: [ {key:"dst", type:"reg"}, {key:"bytes", type:"reg"}, {key:"index", type:"reg"} ] },
  { key: "GetI16", label: "GetI16", params: [ {key:"dst", type:"reg"}, {key:"bytes", type:"reg"}, {key:"index", type:"reg"} ] },
  { key: "GetMem", label: "GetMem", params: [ {key:"dst", type:"reg"}, {key:"bytes", type:"reg"}, {key:"index", type:"reg"} ] },
  { key: "GetArray", label: "GetArray", params: [ {key:"dst", type:"reg"}, {key:"array", type:"reg"}, {key:"index", type:"reg"} ] },
  { key: "SetI8", label: "SetI8", params: [ {key:"bytes", type:"reg"}, {key:"index", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "SetI16", label: "SetI16", params: [ {key:"bytes", type:"reg"}, {key:"index", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "SetMem", label: "SetMem", params: [ {key:"bytes", type:"reg"}, {key:"index", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "SetArray", label: "SetArray", params: [ {key:"array", type:"reg"}, {key:"index", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "New", label: "New", params: [ {key:"dst", type:"reg"} ] },
  { key: "ArraySize", label: "ArraySize", params: [ {key:"dst", type:"reg"}, {key:"array", type:"reg"} ] },

  { key: "Type", label: "Type", params: [ {key:"dst", type:"reg"}, {key:"ty", type:"type"} ] },
  { key: "GetType", label: "GetType", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "GetTID", label: "GetTID", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },

  { key: "Ref", label: "Ref", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "Unref", label: "Unref", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "Setref", label: "Setref", params: [ {key:"dst", type:"reg"}, {key:"value", type:"reg"} ] },

  { key: "MakeEnum", label: "MakeEnum", params: [ {key:"dst", type:"reg"}, {key:"construct", type:"construct"}, {key:"args", type:"reg"} ] },
  { key: "EnumAlloc", label: "EnumAlloc", params: [ {key:"dst", type:"reg"}, {key:"construct", type:"construct"} ] },
  { key: "EnumIndex", label: "EnumIndex", params: [ {key:"dst", type:"reg"}, {key:"value", type:"reg"} ] },
  { key: "EnumField", label: "EnumField", params: [ {key:"dst", type:"reg"}, {key:"value", type:"reg"}, {key:"construct", type:"construct"}, {key:"field", type:"field"} ] },
  { key: "SetEnumField", label: "SetEnumField", params: [ {key:"value", type:"reg"}, {key:"field", type:"field"}, {key:"src", type:"reg"} ] },

  { key: "Assert", label: "Assert", params: [] },
  { key: "RefData", label: "RefData", params: [ {key:"dst", type:"reg"}, {key:"src", type:"reg"} ] },
  { key: "RefOffset", label: "RefOffset", params: [ {key:"dst", type:"reg"}, {key:"reg", type:"reg"}, {key:"offset", type:"reg"} ] },
  { key: "Nop", label: "Nop", params: [] },
  { key: "Prefetch", label: "Prefetch", params: [ {key:"value", type:"reg"}, {key:"field", type:"field"}, {key:"mode", type:"int"} ] },
  { key: "Asm", label: "Asm", params: [ {key:"mode", type:"int"}, {key:"value", type:"int"}, {key:"reg", type:"reg"} ] }
];